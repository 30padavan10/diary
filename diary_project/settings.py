"""
Django settings for diary project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-v__3&-bf*jir@w0b!&v#d1p#mupze_vr))=-f2-36o+4&=c1zy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',    # приложение отвечающее за стандартную аутентификацию, можно добавить только html форму,
    # подключить это приложение в урлах и использовать стандартные урлы, можно посмотреть в django.contrib.auth.urls
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #"debug_toolbar",
    'silk',   # pip install django-silk, добавить миддлваре, выполнить миграции и collectstatic
    'djoser',
    'rest_framework',
    'rest_framework_simplejwt',
    'diary',

]

AUTH_USER_MODEL = 'diary.CustomUser'
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #"debug_toolbar.middleware.DebugToolbarMiddleware",
    'silk.middleware.SilkyMiddleware',
]

ROOT_URLCONF = 'diary_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'diary_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'diary',
        'USER': 'postgres',
        'PASSWORD': 'qaz',#'123456',
        'HOST': 'localhost',#'0.0.0.0',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


INTERNAL_IPS = [
    "127.0.0.1",
]



REST_FRAMEWORK = {
    #'DATETIME_FORMAT': "%d-%m-%Y %H:%M",    можно задать общий формат времени для всех полей DateTimeField
    'DEFAULT_AUTHENTICATION_CLASSES': (
            'rest_framework_simplejwt.authentication.JWTAuthentication',
        ),
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

STATIC_DIR = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [STATIC_DIR]
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')  # вкл STATIC_ROOT, выкл STATICFILES_DIRS, DEBUG ставим False
# выполняем collectstatic, возвращаем обратно

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




# pip install python-dotenv,

from dotenv import load_dotenv
dotenv_path = os.path.join(BASE_DIR, '.env')
load_dotenv(dotenv_path)

# отправка email

EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_HOST_USER = os.getenv('NAME')
EMAIL_HOST_PASSWORD = os.getenv('PASSWORD')


# настройки для redis и celery
# REDIS_HOST = 'localhost'
# REDIS_PORT = '6379'
#CELERY_BROKER_URL = 'redis://127.0.0.1:6379/0'  #"redis://" + REDIS_HOST + ":" + REDIS_PORT # + "/0"  для винды
CELERY_BROKER_URL = 'redis://diary_app_redis:6379'
'diary_app_redis'
# CELERY_BROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 3600}
#CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/0'  # "redis://" + REDIS_HOST + ":" + REDIS_PORT # + "/0" для винды
CELERY_RESULT_BACKEND = 'redis://diary_app_redis:6379'
# CELERY_ACCEPT_CONTENT = ['application/json']
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'

# celery --workdir=./ -A diary_project worker --loglevel=info # запускается из папки diary























